[{"D:\\Dev\\ZWorkspace\\AulasDevInHouse\\Projeto2\\projetodois\\src\\index.js":"1","D:\\Dev\\ZWorkspace\\AulasDevInHouse\\Projeto2\\projetodois\\src\\reportWebVitals.js":"2","D:\\Dev\\ZWorkspace\\AulasDevInHouse\\Projeto2\\projetodois\\src\\pages\\Main.js":"3","D:\\Dev\\ZWorkspace\\AulasDevInHouse\\Projeto2\\projetodois\\src\\components\\ShowMsg.js":"4","D:\\Dev\\ZWorkspace\\AulasDevInHouse\\Projeto2\\projetodois\\src\\components\\ProcessManager.js":"5","D:\\Dev\\ZWorkspace\\AulasDevInHouse\\Projeto2\\projetodois\\src\\service\\RequestControler.js":"6","D:\\Dev\\ZWorkspace\\AulasDevInHouse\\Projeto2\\projetodois\\src\\components\\Listagem.js":"7","D:\\Dev\\ZWorkspace\\AulasDevInHouse\\Projeto2\\projetodois\\src\\components\\ShowProcess.js":"8"},{"size":509,"mtime":1610828311491,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1608157322394,"results":"11","hashOfConfig":"10"},{"size":8453,"mtime":1611526486710,"results":"12","hashOfConfig":"10"},{"size":959,"mtime":1611279951079,"results":"13","hashOfConfig":"10"},{"size":5175,"mtime":1611526964324,"results":"14","hashOfConfig":"10"},{"size":908,"mtime":1611526464673,"results":"15","hashOfConfig":"10"},{"size":2324,"mtime":1611521803559,"results":"16","hashOfConfig":"10"},{"size":3315,"mtime":1611525214199,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"9g2ukg",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Dev\\ZWorkspace\\AulasDevInHouse\\Projeto2\\projetodois\\src\\index.js",[],["37","38"],"D:\\Dev\\ZWorkspace\\AulasDevInHouse\\Projeto2\\projetodois\\src\\reportWebVitals.js",[],["39","40"],"D:\\Dev\\ZWorkspace\\AulasDevInHouse\\Projeto2\\projetodois\\src\\pages\\Main.js",["41"],"\r\nimport {\r\n    makeStyles, Modal, Box, Card, InputAdornment,\r\n    Typography, Button, IconButton, CircularProgress,\r\n    TextField,\r\n} from '@material-ui/core';\r\nimport { Search, } from '@material-ui/icons';\r\nimport { useState } from 'react';\r\nimport ProcessManager from '../components/ProcessManager.js';\r\nimport ShowProcess from '../components/ShowProcess.js'\r\nimport Listagem from '../components/Listagem.js'\r\nimport control from '../service/RequestControler.js'\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    telaPrincipalBusca: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        position: \"absolute\",\r\n        top: '0',\r\n        right: '0',\r\n        bottom: '0',\r\n        left: '0',\r\n        margin: \"auto\",\r\n    },\r\n    telaPrincipalLista: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n    },\r\n\r\n    BoxTelaListagem: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        height: \"fit-content\",\r\n    },\r\n    BoxSelecionado: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        height: \"fit-content\",\r\n    },\r\n    BoxLista: {\r\n        display: \"flex\",\r\n    },\r\n    listagemStyle: {\r\n        margin: 5,\r\n        padding: 10,\r\n        width: \"100%\",\r\n    },\r\n\r\n    buscaProcesso: {\r\n        color: \"#005b95\",\r\n        margin: 5,\r\n        padding: 10,\r\n    },\r\n    buscaProcessoNoColor: {\r\n        width: 100,\r\n        margin: 5,\r\n        padding: 10,\r\n    },\r\n    campoDeBusca: {\r\n        margin: 15,\r\n        minWidth: 550,\r\n    },\r\n\r\n    padraoBotoes: {\r\n        width: 100,\r\n        height: 45,\r\n        margin: 5,\r\n        padding: 10,\r\n    },\r\n\r\n    marginPadding: {\r\n        margin: 5,\r\n        padding: 10,\r\n        overflow: \"hidden\",\r\n    },\r\n    startMargingPadding: {\r\n        textAlign: \"start\",\r\n        margin: 5,\r\n        padding: 10,\r\n        overflow: \"hidden\",\r\n    },\r\n    endMarginPadding: {\r\n        textAlign: \"end\",\r\n        margin: 5,\r\n        padding: 10,\r\n        overflow: \"hidden\",\r\n    },\r\n\r\n});\r\n\r\nconst Main = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [controleTela, setControleTela] = useState('Main');\r\n    const [processSelected, setProcessSelected] = useState(false);\r\n    const [processo, setProcesso] = useState({})\r\n    const [buscar, setBuscar] = useState('')\r\n    const [lista, setLista] = useState([])\r\n    const [modalState, openModal] = useState(false);\r\n    const [acao, setAcao] = useState('');\r\n\r\n    const isLoading = () => {\r\n        setControleTela('Loading')\r\n    }\r\n    const mostrarLista = () => {\r\n        setControleTela('MotrarLista')\r\n    }\r\n    const resetarTela = () => {\r\n        setControleTela('Main')\r\n        resetaSelecionado()\r\n        setLista([])\r\n        setBuscar('')\r\n        openModal(false)\r\n    }\r\n\r\n    const resetaSelecionado = () => {\r\n        setProcessSelected(false)\r\n        setProcesso({})\r\n    }\r\n\r\n    const buscarPorAssunto = async () => {\r\n        isLoading()\r\n        resetaSelecionado()\r\n        const resposta = await control.buscarAssunto(buscar);\r\n        if (resposta.length > 0) {\r\n            setLista(resposta);\r\n            mostrarLista();\r\n        } else {\r\n            resetarTela();\r\n        }\r\n    }\r\n\r\n    const deleteProcess = async (id) => {\r\n        console.log(id)\r\n        // const resposta = await control.deletarProcesso(id)\r\n        // resetarTela()\r\n    }\r\n    const editarProcess = () => {\r\n        setAcao(\"Editar esse Processo\");\r\n        handleModal()\r\n\r\n    }\r\n    const novoProcess = () => {\r\n        setAcao(\"Criar Novo Processo\");\r\n        handleModal()\r\n    }\r\n    const handleSalvar = async (objeto) => {\r\n        if(acao === \"Editar esse Processo\") {\r\n            console.log(\"Não existe URL para editar!!!\")\r\n        } else {\r\n            const resposta = await control.inserirProcesso(objeto)\r\n            console.log(resposta)\r\n        }\r\n        resetarTela()\r\n    }\r\n\r\n    const handleModal = () => {\r\n        openModal(!modalState);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box className={\r\n                'Main' === controleTela ? classes.telaPrincipalBusca : classes.telaPrincipalLista}>\r\n                <Typography className={\r\n                    'Main' === controleTela ? classes.buscaProcesso : classes.buscaProcessoNoColor}\r\n                    variant={'Main' === controleTela ? \"h1\" : \"body1\"}>\r\n                    Busca de Processos\r\n                    </Typography>\r\n                <TextField\r\n                    className={classes.campoDeBusca}\r\n                    id=\"pesquisa\"\r\n                    label=\"\"\r\n                    placeholder=\"Pesquise uma informação do Processo\"\r\n                    multiline={false}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    onChange={e => setBuscar(e.target.value)}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton onClick={buscarPorAssunto}>\r\n                                    <Search />\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                    component={Card}\r\n                />\r\n                {'Main' === controleTela ?\r\n                    <Typography\r\n                        className={classes.marginPadding}\r\n                    >Voce pode criar um novo processo\r\n                    <Button color=\"primary\" onClick={novoProcess} >clicando aqui.</Button>\r\n                    </Typography> :\r\n                    <Button variant=\"contained\"\r\n                        className={classes.padraoBotoes}\r\n                        disableElevation\r\n                        onClick={novoProcess}>Novo</Button>}\r\n            </Box>\r\n            <Box className={classes.BoxLista}>\r\n                {controleTela === 'Loading' &&\r\n                    <CircularProgress className={classes.telaPrincipalBusca} />}\r\n                <Box className={classes.BoxTelaListagem}>\r\n                    {controleTela === 'MotrarLista' &&\r\n                        <Listagem\r\n                            lista={lista}\r\n                            setProcessSelected={setProcessSelected}\r\n                            setProcesso={setProcesso}\r\n                            processSelected={processSelected}\r\n                            listagemStyle={classes.listagemStyle}\r\n                            startMarginPadding={classes.startMarginPadding}\r\n                            marginPadding={classes.marginPadding}\r\n                        />}\r\n                </Box>\r\n                {\r\n                    controleTela === 'MotrarLista' && processSelected &&\r\n                    <Box className={classes.BoxSelecionado}>\r\n                        <ShowProcess\r\n                            closeButton={resetaSelecionado}\r\n                            className={classes.Selecionado}\r\n                            processo={processo}\r\n                            deleteProcess={deleteProcess}\r\n                            editarProcess={editarProcess}\r\n                            listagemStyle={classes.listagemStyle}\r\n                            marginPadding={classes.marginPadding}\r\n                            startMarginPadding={classes.startMarginPadding}\r\n                            endMarginPadding={classes.endMarginPadding}\r\n                            padraoBotoes={classes.padraoBotoes} />\r\n                    </Box>\r\n                }\r\n            </Box>\r\n            <Modal\r\n                open={modalState}\r\n                onClose={handleModal}\r\n                aria-labelledby=\"Modal para Novos Processos\"\r\n                aria-describedby=\"Modal feito para criar novos processos\"\r\n            >\r\n                <Box id=\"modalCard\"\r\n                    marginTop=\"50px\"\r\n                    margin=\"auto\"\r\n                    minWidth={740}\r\n                    height=\"fit-content\"\r\n                    width=\"fit-content\"\r\n                >\r\n                    <ProcessManager\r\n                        closeButton={handleModal}\r\n                        processo={processo}\r\n                        handleSalvar={handleSalvar}\r\n                        acao={acao} />\r\n                </Box>\r\n            </Modal>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Main","D:\\Dev\\ZWorkspace\\AulasDevInHouse\\Projeto2\\projetodois\\src\\components\\ShowMsg.js",[],"D:\\Dev\\ZWorkspace\\AulasDevInHouse\\Projeto2\\projetodois\\src\\components\\ProcessManager.js",[],"D:\\Dev\\ZWorkspace\\AulasDevInHouse\\Projeto2\\projetodois\\src\\service\\RequestControler.js",["42"],"D:\\Dev\\ZWorkspace\\AulasDevInHouse\\Projeto2\\projetodois\\src\\components\\Listagem.js",[],"D:\\Dev\\ZWorkspace\\AulasDevInHouse\\Projeto2\\projetodois\\src\\components\\ShowProcess.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"43","replacedBy":"47"},{"ruleId":"45","replacedBy":"48"},{"ruleId":"49","severity":2,"message":"50","line":157,"column":60,"nodeType":"51","messageId":"52","endLine":157,"endColumn":66},{"ruleId":"49","severity":2,"message":"53","line":28,"column":31,"nodeType":"51","messageId":"52","endLine":28,"endColumn":39},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],["54"],["55"],"no-undef","'objeto' is not defined.","Identifier","undef","'response' is not defined.","no-global-assign","no-unsafe-negation"]